version: "3.2"

services:
  postgres:
    image: debezium/postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=emr
    volumes:
      - postgres:/var/lib/postgresql/data
    #  - ./postgres.conf:/etc/postgresql/postgresql.conf
    #  - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    # command: postgres -c config_file=/etc/postgresql/postgresql.conf

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80

  redis:
    image: redis/redis-stack-server:latest
    volumes:
      - redis:/data

  opensearch-node1:
    image: opensearchproject/opensearch:latest
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - discovery.seed_hosts=opensearch-node1
      - cluster.initial_master_nodes=opensearch-node1
      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600 # required for Performance Analyzer

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]'

  orthanc:
    image: jodogne/orthanc-plugins:latest
    hostname: orthanc
    command: /run/secrets/
    volumes:
      # Config
      - ./config/orthanc.json:/etc/orthanc/orthanc.json:ro
      # Persist data
      - ./volumes/orthanc-db/:/var/lib/orthanc/db/
      - ~/WorklistsDatabase:/WorklistsDatabase
    ports:
      - '4242:4242' # DICOM
      - '8042:8042' # Web
    secrets:
      - orthanc.json
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}

  web:
    image: web:latest
    volumes:
      # Nginx config
      - ./config/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      # Logs
      - ./logs/nginx:/var/logs/nginx
      # Let's Encrypt
      # - letsencrypt_certificates:/etc/letsencrypt
      # - letsencrypt_challenges:/var/www/letsencrypt
    ports:
     - '443:443' # SSL
     - '80:80' # Web
    deploy:
      mode: replicated
      replicas: 1

  server:
    image: ghcr.io/tensorsystems/tensoremr/apps/server:latest
    volumes:
      - server_files:/usr/src/app/files
      - ~/WorklistsDatabase:/WorklistsDatabase
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: emr
      DB_HOST: postgres
      RXNORM_ADDRESS: http://172.16.32.10:4000
      DICOM_ADDRESS: http://orthanc:8042
      REDIS_ADDRESS: redis:6379
      DB_DRIVER: postgres
      DB_PORT: 5432
      DCM_WORKLIST_WORKING_DIR: /WorklistsDatabase
    deploy:
      mode: replicated
      replicas: 1

  analytics:
    image: ghcr.io/tensorsystems/tensoremr/apps/analytics:latest
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: emr
      DB_HOST: postgres
      REDIS_ADDRESS: redis:6379
      OPENSEARCH_ADDRESS: https://opensearch-node1:9200
      DB_DRIVER: postgres
      DB_PORT: 5432
    ports:
      - 8085:8085
    deploy:
      mode: replicated
      replicas: 1

  # web:
  #   build: 
  #     context: ../../apps/web/
  #   container_name: emr_web
  #   image: ghcr.io/tensorsystems/tensoremr/apps/web:latest
  #   environment:
  #     NODE_ENV: production
  #   depends_on:
  #     - server
  #   restart: unless-stopped

volumes:
  postgres:
  redis:
  server_files:
  opensearch-data1:

secrets:
  orthanc.json:
    file: ./config/orthanc.json
