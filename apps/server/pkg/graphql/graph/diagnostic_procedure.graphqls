"""
Copyright 2021 Kidus Tiliksew

This file is part of Tensor EMR.

Tensor EMR is free software: you can redistribute it and/or modify
it under the terms of the version 2 of GNU General Public License as published by
the Free Software Foundation.

Tensor EMR is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
enum DiagnosticProcedureOrderStatus {
  ORDERED
  COMPLETED
}

type DiagnosticProcedureOrder {
  id: ID!
  patientChartId: ID!
  patientId: ID!
  firstName: String!
  lastName: String!
  phoneNo: String!
  userName: String!
  orderedById: ID
  orderedBy: User
  diagnosticProcedures: [DiagnosticProcedure!]!
  status: DiagnosticProcedureOrderStatus!
  createdAt: Time
}

type DiagnosticProcedureOrderEdge {
  node: DiagnosticProcedureOrder!
}

type DiagnosticProcedureOrderConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [DiagnosticProcedureOrderEdge!]!
}

type DiagnosticProcedureType {
  id: ID!
  title: String!
  active: Boolean!
  billings: [Billing]!
}

type DiagnosticProcedureTypeEdge {
  node: DiagnosticProcedureType!
}

type DiagnosticProcedureTypeConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [DiagnosticProcedureTypeEdge]!
}

input DiagnosticProcedureTypeInput {
  title: String!
  active: Boolean!
  billingIds: [ID]!
}

input DiagnosticProcedureTypeUpdateInput {
  id: ID!
  title: String
  active: Boolean!
  billingIds: [ID]
}

enum DiagnosticProcedureStatus {
  ORDERED
  COMPLETED
}

type DiagnosticProcedure {
  id: ID!
  diagnosticProcedureOrderID: ID!
  patientChartId: ID!
  generalText: String
  images: [File]!
  documents: [File]!
  rightDistanceSubjectiveSph: String
  leftDistanceSubjectiveSph: String
  rightDistanceSubjectiveCyl: String
  leftDistanceSubjectiveCyl: String
  rightDistanceSubjectiveAxis: String
  leftDistanceSubjectiveAxis: String
  rightNearSubjectiveSph: String
  leftNearSubjectiveSph: String
  rightNearSubjectiveCyl: String
  leftNearSubjectiveCyl: String
  rightNearSubjectiveAxis: String
  leftNearSubjectiveAxis: String
  rightDistanceObjectiveSph: String
  leftDistanceObjectiveSph: String
  rightDistanceObjectiveCyl: String
  leftDistanceObjectiveCyl: String
  rightDistanceObjectiveAxis: String
  leftDistanceObjectiveAxis: String
  rightNearObjectiveSph: String
  leftNearObjectiveSph: String
  rightNearObjectiveCyl: String
  leftNearObjectiveCyl: String
  rightNearObjectiveAxis: String
  leftNearObjectiveAxis: String
  rightDistanceFinalSph: String
  leftDistanceFinalSph: String
  rightDistanceFinalCyl: String
  leftDistanceFinalCyl: String
  rightDistanceFinalAxis: String
  leftDistanceFinalAxis: String
  rightNearFinalSph: String
  leftNearFinalSph: String
  rightNearFinalCyl: String
  leftNearFinalCyl: String
  rightNearFinalAxis: String
  leftNearFinalAxis: String
  rightVisualAcuity: String
  leftVisualAcuity: String
  farPd: String
  nearPd: String
  diagnosticProcedureTypeId: ID
  diagnosticProcedureType: DiagnosticProcedureType!
  diagnosticProcedureTypeTitle: String!
  status: DiagnosticProcedureStatus!
  receptionNote: String!
  orderNote: String!
  payments: [Payment!]!
  createdAt: Time!
}

type DiagnosticProcedureEdge {
  node: DiagnosticProcedure!
}

type DiagnosticProcedureConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [DiagnosticProcedureEdge]!
}

input DiagnosticProcedureInput {
  patientChartId: ID!
  diagnosticProcedureOrderId: ID!
  generalText: String
  imageIds: [ID]!
  rightEyeImageIds: [ID]!
  leftEyeImageIds: [ID]!
  rightEyeSketcheIds: [ID]!
  leftEyeSketcheIds: [ID]!
  documentIds: [ID]!
  rightDistanceSubjectiveSph: String
  leftDistanceSubjectiveSph: String
  rightDistanceSubjectiveCyl: String
  leftDistanceSubjectiveCyl: String
  rightDistanceSubjectiveAxis: String
  leftDistanceSubjectiveAxis: String
  rightNearSubjectiveSph: String
  leftNearSubjectiveSph: String
  rightNearSubjectiveCyl: String
  leftNearSubjectiveCyl: String
  rightNearSubjectiveAxis: String
  leftNearSubjectiveAxis: String
  rightDistanceObjectiveSph: String
  leftDistanceObjectiveSph: String
  rightDistanceObjectiveCyl: String
  leftDistanceObjectiveCyl: String
  rightDistanceObjectiveAxis: String
  leftDistanceObjectiveAxis: String
  rightNearObjectiveSph: String
  leftNearObjectiveSph: String
  rightNearObjectiveCyl: String
  leftNearObjectiveCyl: String
  rightNearObjectiveAxis: String
  leftNearObjectiveAxis: String
  rightDistanceFinalSph: String
  leftDistanceFinalSph: String
  rightDistanceFinalCyl: String
  leftDistanceFinalCyl: String
  rightDistanceFinalAxis: String
  leftDistanceFinalAxis: String
  rightNearFinalSph: String
  leftNearFinalSph: String
  rightNearFinalCyl: String
  leftNearFinalCyl: String
  rightNearFinalAxis: String
  leftNearFinalAxis: String
  rightVisualAcuity: String
  leftVisualAcuity: String
  farPd: String
  nearPd: String
  orderId: ID!
}

input OrderDiagnosticProcedureInput {
  diagnosticProcedureTypeId: ID!
  patientChartId: ID!
  appointmentId: ID!
  patientId: ID!
  billingId: ID!
  orderNote: String!
  receptionNote: String!
  modality: String
}

input DiagnosticProcedureUpdateInput {
  id: ID!
  generalText: String
  images: [FileUpload]
  documents: [FileUpload]
  rightDistanceSubjectiveSph: String
  leftDistanceSubjectiveSph: String
  rightDistanceSubjectiveCyl: String
  leftDistanceSubjectiveCyl: String
  rightDistanceSubjectiveAxis: String
  leftDistanceSubjectiveAxis: String
  rightNearSubjectiveSph: String
  leftNearSubjectiveSph: String
  rightNearSubjectiveCyl: String
  leftNearSubjectiveCyl: String
  rightNearSubjectiveAxis: String
  leftNearSubjectiveAxis: String
  rightDistanceObjectiveSph: String
  leftDistanceObjectiveSph: String
  rightDistanceObjectiveCyl: String
  leftDistanceObjectiveCyl: String
  rightDistanceObjectiveAxis: String
  leftDistanceObjectiveAxis: String
  rightNearObjectiveSph: String
  leftNearObjectiveSph: String
  rightNearObjectiveCyl: String
  leftNearObjectiveCyl: String
  rightNearObjectiveAxis: String
  leftNearObjectiveAxis: String
  rightDistanceFinalSph: String
  leftDistanceFinalSph: String
  rightDistanceFinalCyl: String
  leftDistanceFinalCyl: String
  rightDistanceFinalAxis: String
  leftDistanceFinalAxis: String
  rightNearFinalSph: String
  leftNearFinalSph: String
  rightNearFinalCyl: String
  leftNearFinalCyl: String
  rightNearFinalAxis: String
  leftNearFinalAxis: String
  rightVisualAcuity: String
  leftVisualAcuity: String
  farPd: String
  nearPd: String
  status: DiagnosticProcedureStatus
}

input DiagnosticProcedureOrderUpdateInput {
  id: ID!
  patientChartId: ID
  patientId: ID
  firstName: String
  lastName: String
  phoneNo: String
  userName: String
  orderedById: ID
  status: DiagnosticProcedureOrderStatus
  orderNote: String
  receptionNote: String
}

input DiagnosticProcedureDeleteFileInput {
  diagnosticProcedureId: ID!
  fileId: ID!
}

input DiagnosticProcedureFilter {
  patientChartId: ID
}

input DiagnosticProcedureOrderFilter {
  patientChartId: ID
  orderedById: ID
  patientId: ID
  status: String
}

input OrderAndConfirmDiagnosticProcedureInput {
  appointmentId: ID!
  patientId: ID!
  diagnosticProcedureTypeId: ID!
  billingId: ID!
  invoiceNo: String!
  orderNote: String!
}

extend type Query {
  diagnosticProcedure(filter: DiagnosticProcedureFilter!): DiagnosticProcedure!
  diagnosticProcedures(
    page: PaginationInput!
    filter: DiagnosticProcedureFilter
  ): DiagnosticProcedureConnection!

  diagnosticProcedureOrder(patientChartId: ID!): DiagnosticProcedureOrder!
  searchDiagnosticProcedureOrders(
    page: PaginationInput!
    filter: DiagnosticProcedureOrderFilter
    date: Time
    searchTerm: String
  ): DiagnosticProcedureOrderConnection!

  diagnosticProcedureTypes(
    page: PaginationInput!
    searchTerm: String
  ): DiagnosticProcedureTypeConnection!
  refraction(patientChartId: ID!): DiagnosticProcedure
}

extend type Mutation {
  orderDiagnosticProcedure(
    input: OrderDiagnosticProcedureInput!
  ): DiagnosticProcedureOrder!

  orderAndConfirmDiagnosticProcedure(
    input: OrderAndConfirmDiagnosticProcedureInput!
  ): DiagnosticProcedureOrder!

  confirmDiagnosticProcedureOrder(
    id: ID!
    invoiceNo: String!
  ): DiagnosticProcedureOrder!
  updateDiagnosticProcedureOrder(
    input: DiagnosticProcedureOrderUpdateInput!
  ): DiagnosticProcedureOrder!

  saveDiagnosticProcedure(
    input: DiagnosticProcedureInput!
  ): DiagnosticProcedure!

  updateDiagnosticProcedure(
    input: DiagnosticProcedureUpdateInput!
  ): DiagnosticProcedure!

  deleteDiagnosticProcedure(id: ID!): Boolean!

  saveDiagnosticProcedureType(
    input: DiagnosticProcedureTypeInput!
  ): DiagnosticProcedureType!
  updateDiagnosticProcedureType(
    input: DiagnosticProcedureTypeUpdateInput!
  ): DiagnosticProcedureType!
  deleteDiagnosticProcedureType(id: ID!): Boolean!

  deleteDiagnosticImage(input: DiagnosticProcedureDeleteFileInput!): Boolean!

  deleteDiagnosticRightEyeImage(
    input: DiagnosticProcedureDeleteFileInput!
  ): Boolean!
  deleteDiagnosticLeftEyeImage(
    input: DiagnosticProcedureDeleteFileInput!
  ): Boolean!
  deleteDiagnosticRightEyeSketch(
    input: DiagnosticProcedureDeleteFileInput!
  ): Boolean!
  deleteDiagnosticLeftEyeSketch(
    input: DiagnosticProcedureDeleteFileInput!
  ): Boolean!
  deleteDiagnosticDocument(input: DiagnosticProcedureDeleteFileInput!): Boolean!
}
