"""
Copyright 2021 Kidus Tiliksew

This file is part of Tensor EMR.

Tensor EMR is free software: you can redistribute it and/or modify
it under the terms of the version 2 of GNU General Public License as published by
the Free Software Foundation.

Tensor EMR is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
enum FollowUpOrderStatus {
  ORDERED
  COMPLETED
}

type FollowUpOrder {
  id: ID!
  patientChartId: ID!
  patientId: ID!
  firstName: String!
  lastName: String!
  phoneNo: String!
  userName: String!
  orderedById: ID
  orderedBy: User
  followUps: [FollowUp!]!
  status: FollowUpOrderStatus!
  createdAt: Time
}

type FollowUpOrderEdge {
  node: FollowUpOrder!
}

type FollowUpOrderConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [FollowUpOrderEdge!]!
}

enum FollowUpStatus {
  ORDERED
  COMPLETED
}

type FollowUp {
  id: ID!
  followUpOrderId: ID!
  patientChartId: ID!
  receptionNote: String!
  status: FollowUpStatus!
}

type FollowUpEdge {
  node: FollowUp!
}

type FollowUpConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [FollowUpEdge!]!
}

input FollowUpInput {
  followUpOrderId: ID!
  patientChartId: ID!
  status: FollowUpStatus!
}

input FollowUpUpdateInput {
  id: ID!
  status: FollowUpStatus
}

input FollowUpFilter {
  patientChartId: ID
}

input FollowUpOrderFilter {
  patientChartId: ID
  orderedById: ID
  patientId: ID
  status: String
}

input OrderFollowUpInput {
  patientChartId: ID!
  patientId: ID!
  receptionNote: String!
}

input ConfirmFollowUpOrderInput {
  followUpOrderId: ID!
  followUpId: ID!
  billingId: ID
  invoiceNo: String
  checkInTime: Time!
  roomId: ID!
}

type ConfirmFollowUpOrderResult {
  followUpOrder: FollowUpOrder!
  followUpId: ID!
  invoiceNo: String
  billingId: ID
}

extend type Query {
  followUp(filter: FollowUpFilter!): FollowUp!
  followUps(page: PaginationInput!, filter: FollowUpFilter): FollowUpConnection!

  followUpOrder(patientChartId: ID!): FollowUpOrder!

  searchFollowUpOrders(
    page: PaginationInput!
    filter: FollowUpOrderFilter
    date: Time
    searchTerm: String
  ): FollowUpOrderConnection!
}

extend type Mutation {
  orderFollowUp(input: OrderFollowUpInput!): FollowUpOrder!
  confirmFollowUpOrder(
    input: ConfirmFollowUpOrderInput!
  ): ConfirmFollowUpOrderResult!
  deleteFollowUp(id: ID!): Boolean!

  saveFollowUp(input: FollowUpInput!): FollowUp!
  updateFollowUp(input: FollowUpUpdateInput!): FollowUp!
}
