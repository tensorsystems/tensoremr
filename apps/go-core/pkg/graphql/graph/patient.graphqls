"""
Copyright 2021 Kidus Tiliksew

This file is part of Tensor EMR.

Tensor EMR is free software: you can redistribute it and/or modify
it under the terms of the version 2 of GNU General Public License as published by
the Free Software Foundation.

Tensor EMR is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
type Patient {
  id: ID!
  firstName: String!
  lastName: String!
  gender: String!
  phoneNo: String!
  phoneNo2: String!
  homePhone: String!
  email: String!
  dateOfBirth: Time!
  idNo: String!
  idType: String!
  martialStatus: String!
  occupation: String!
  credit: Boolean
  creditCompany: String
  emergencyContactName: String!
  emergencyContactRel: String!
  emergencyContactPhone: String!
  emergencyContactPhone2: String!
  emergencyContactMemo: String!
  region: String!
  city: String!
  subCity: String!
  woreda: String!
  zone: String!
  kebele: String!
  houseNo: String!
  cardNo: String
  paperRecord: Boolean!
  paperRecordDocumentId: ID
  paperRecordDocument: File
  documents: [File]
  memo: String!
  patientHistory: PatientHistory!
}

type PatientEdge {
  node: Patient!
}

type PatientConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [PatientEdge]!
}

type ProgressNote {
  patientHistory: PatientHistory
  appointments: [Appointment]!
}

type VitalSignsProgress {
  appointments: [Appointment]!
}

input PatientInput {
  firstName: String!
  lastName: String!
  gender: String!
  phoneNo: String!
  phoneNo2: String
  homePhone: String
  email: String
  dateOfBirth: Time!
  credit: Boolean
  creditCompany: String
  idNo: String
  idType: String
  martialStatus: String
  occupation: String
  emergencyContactName: String
  emergencyContactRel: String
  emergencyContactPhone: String
  emergencyContactPhone2: String
  emergencyContactMemo: String
  region: String!
  city: String
  subCity: String
  woreda: String!
  zone: String
  kebele: String
  houseNo: String
  cardNo: String
  paperRecord: Boolean!
  paperRecordDocument: FileUpload
  documents: [FileUpload]
  memo: String
}

input PatientInputV2 {
  firstName: String!
  lastName: String!
  gender: String!
  phoneNo: String!
  phoneNo2: String
  homePhone: String
  email: String
  credit: Boolean
  creditCompany: String
  idNo: String
  idType: String
  martialStatus: String
  occupation: String
  emergencyContactName: String
  emergencyContactRel: String
  emergencyContactPhone: String
  emergencyContactPhone2: String
  emergencyContactMemo: String
  region: String!
  city: String
  subCity: String
  woreda: String!
  zone: String
  kebele: String
  houseNo: String
  cardNo: String
  paperRecord: Boolean!
  paperRecordDocument: FileUpload
  documents: [FileUpload]
  memo: String
}

enum DateOfBirthInputType {
  DATE
  AGE_YEAR
  AGE_MONTH
}

input DateOfBirthInput {
  dateOfBirth: Time
  ageInYears: Int 
  ageInMonths: Int
  inputType: DateOfBirthInputType!
}

input PatientUpdateInput {
  id: ID!
  firstName: String
  lastName: String
  gender: String
  phoneNo: String
  phoneNo2: String
  homePhone: String
  email: String
  credit: Boolean
  creditCompany: String
  dateOfBirth: Time
  idNo: String
  idType: String
  martialStatus: String
  occupation: String
  emergencyContactName: String
  emergencyContactRel: String
  emergencyContactPhone: String
  emergencyContactPhone2: String
  emergencyContactMemo: String
  region: String
  city: String
  subCity: String
  woreda: String
  zone: String
  kebele: String
  houseNo: String
  cardNo: String
  paperRecord: Boolean
  paperRecordDocument: FileUpload
  documents: [FileUpload]
  memo: String
}

type OrdersCount {
  diagnosticProcedureOrders: Int!
  labOrders: Int!
  treatmentOrders: Int!
  surgicalOrders: Int!
  referralOrders: Int!
  followUpOrders: Int!
}

input SimilarPatientsInput {
  firstName: String!
  lastName: String!
  phoneNo: String!
}

type SimilarPatients {
  byName: [Patient!]!
  byPhone: [Patient!]!
}

extend type Query {
  patient(id: ID!): Patient!
  searchPatients(term: String!): [Patient!]!
  getByCardNo(cardNo: String!): Patient!
  getProgressNotes(appointmentId: ID!): ProgressNote!
  getAllPatientProgress(patientId: ID!): ProgressNote!
  getVitalSignsProgress(patientId: ID!): VitalSignsProgress!
  getPatientDiagnosticProgress(
    patientId: ID!
    procedureTypeTitle: String!
  ): [Appointment!]!
  getPatientDiagnosticProcedureTitles(patientId: ID!): [String!]!
  patients(page: PaginationInput!): PatientConnection!
  getPatientOrderCount(patientId: ID!): OrdersCount!
  getPatientFiles(patientId: ID!): [File!]!
  findSimilarPatients(input: SimilarPatientsInput!): SimilarPatients!
}

extend type Mutation {
  savePatient(input: PatientInput!): Patient!
  savePatientV2(input: PatientInputV2!, dateOfBirthInput: DateOfBirthInput!): Patient!
  updatePatient(input: PatientUpdateInput!): Patient!
  deletePatient(id: ID!): Boolean!
}
